Intro: Serendipity is an AI chatbot and digital-assistant app in Python using Gradio and Flask
Goal: A modular, user-friendly, and well-coded AI chatbot/digital assistant showcasing impeccable organization and elegant programming skills.
Repo: https://github.com/silasfelinus/ivychat
Language: Python 3.8
ML: Gradio
Custom html/css/js: Flask
Integrations: OpenAI
Testing: pytest
Logging: logger
CI: Github Actions
Documentation: Ivychat & ChatGPT

Notes: Focus on readability, simplicity, and consistent naming conventions. 
Write modular and reusable functions or classes. 
Adhere to Python best practices and coding standards. 
Ensure proper error handling and use meaningful error messages. 
Provide well-commented code and maintain documentation-ready styling. 
Assume the latest code version is in use, and check for bugs and errors.
Adhere to Python's PEP 8 style guide.
Consistent naming conventions for variables, functions, and classes.
Proper error handling and meaningful error messages.
DRY (Don't Repeat Yourself) principles for writing modular and reusable code.
Adequate documentation through docstrings and inline comments.

Condensed Directory Info:
ivychat/trawler.py: Utility script for reading functions and comments from a codebase.
ivychat/.github/workflow/flow.yaml:Github Action CI info
ivychat/app/main.py: Application entry point.
ivychat/app/logging_config.py:
ivychat/app/utils/utils.py: Configuration loading and response generation functions.
ivychat/app/interface/gradio.py: Gradio interface for the chatbot.
ivychat/app/test/test_chatbot.py: Test suite for chatbot functionality.
ivychat/app/chatbot/conversation.py: Function for building conversation prompts.
ivychat/app/chatbot/chatbot.py: Chatbot class with initialization, config loading, response, and prompt building functions.
ivychat/app/chatbot/response.py: Function for generating responses using the OpenAI API.
ivychat/app/chatbot/prompt_builder.py: PromptBuilder class for constructing conversation prompts and chatbot retrieval function.
ivychat/app/routes/routes.py: Route for handling chatbot requests.
ivychat/app/static/: reserved for future custom css
ivychat/docs/README.md
ivychat/app/templates/index.html
ivychat/requirements.txt

Last Goals: Directory Structure, Logging
Next Goals: Website formatting, Livechat, Database, User Login, , Documentation
Current Goal: Code Review before Testing Suite
