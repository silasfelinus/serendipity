File: ./trawler.py
    def read_gitignore():
    def print_functions(gitignore_set, output_file):
    # If it's a function definition, write it to the output file
    def print_comment(file_path, output_file):
    def traverse_directory(gitignore_set, output_file, dir_path="."):
    def main():

File: ./ivychat/trawler.py
    def read_gitignore():
    def print_functions(gitignore_set, file_path, output_file):
    def print_comment(file_path, output_file):
    def traverse_directory(gitignore_set, output_file, dir_path="."):
    def main():

File: ./ivychat/app/main.py
    # Import the required libraries

File: ./ivychat/app/__init__.py

File: ./ivychat/app/utils/utils.py
    # Load configurations from global_config_file and bot_presets_file
    def load_config(global_config_file, bot_presets_file):
    def generate_response(prompt, config):

File: ./ivychat/app/utils/__init__.py

File: ./ivychat/app/config/__init__.py

File: ./ivychat/app/interface/gradio.py
    # Initialize the Chatbot instance with a configuration file
    def chatbot_response(user_input, chatbot_id="serendipity-fairy", conversation_history=None):
    def create_interface():

File: ./ivychat/app/interface/__init__.py

File: ./ivychat/app/test/test_chatbot.py
    def test_load_config():
    def test_generate_response():
    def test_build_prompt():
    def test_chatbot_response():
    def test_get_chatbot_by_id():

File: ./ivychat/app/test/__init__.py

File: ./ivychat/app/chatbot/conversation.py
    # Function to build a prompt using the PromptBuilder class
    def build_prompt(chatbot, user_input, conversation_history=None):

File: ./ivychat/app/chatbot/chatbot.py
    # Import the generate_response function from the response module
    def __init__(self, config_file, chatbot_id="default"):
    def load_config(self):
    def response(self, user_input, conversation_history=None):
    def build_prompt(self, user_input, conversation_history=None):
    default_keys = set([

File: ./ivychat/app/chatbot/response.py
    # Set the OpenAI API key
    def generate_response(prompt):

File: ./ivychat/app/chatbot/__init__.py

File: ./ivychat/app/chatbot/prompt_builder.py
    # Define the PromptBuilder class for constructing conversation prompts
    def __init__(self, chatbot, user_input, conversation_history=None):
    def get_chatbot_by_id(chatbot_id, config):
    default_chatbot = None
    default_chatbot = chatbot
    def build_prompt(self):
    default_keys = set([

File: ./ivychat/app/routes/routes.py
    # Initialize the Chatbot instance with a configuration file
    def chatbot_route():

File: ./ivychat/app/routes/__init__.py

File: ./app/utils.py
    # Load configurations from global_config_file and bot_presets_file
    def load_config(global_config_file, bot_presets_file):
    def generate_response(prompt, config):

File: ./app/main.py
    # Import the required libraries

File: ./app/__init__.py

File: ./app/utils/utils.py
    # Load configurations from global_config_file and bot_presets_file
    def load_config(global_config_file, bot_presets_file):
    def generate_response(prompt, config):

File: ./app/utils/__init__.py

File: ./app/config/__init__.py

File: ./app/interface/gradio.py
    # Initialize the Chatbot instance with a configuration file
    def chatbot_response(user_input, chatbot_id="serendipity-fairy", conversation_history=None):
    def create_interface():

File: ./app/interface/__init__.py

File: ./app/test/__init__.py

File: ./app/chatbot/conversation.py
    # Import the PromptBuilder class
    def build_prompt(chatbot, user_input, conversation_history=None):

File: ./app/chatbot/chatbot.py
    # Import the generate_response function from the response module
    def __init__(self, config_file, chatbot_id="default"):
    def load_config(self):
    def response(self, user_input, conversation_history=None):
    def build_prompt(self, user_input, conversation_history=None):
    default_keys = set([

File: ./app/chatbot/response.py
    # Set the OpenAI API key
    def generate_response(prompt):

File: ./app/chatbot/__init__.py

File: ./app/chatbot/prompt_builder.py
    # Define the PromptBuilder class for constructing conversation prompts
    def __init__(self, chatbot, user_input, conversation_history=None):
    def get_chatbot_by_id(chatbot_id, config):
    default_chatbot = None
    default_chatbot = chatbot
    def build_prompt(self):
    default_keys = set([

File: ./app/routes/routes.py
    # Initialize the Chatbot instance with a configuration file
    def chatbot_route():

File: ./app/routes/__init__.py

